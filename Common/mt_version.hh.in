/*
 * mt_version.hh
 *
 *  Generated by cmake from mt_version.hh.in
 *
 *  Created on: Mar 20, 2013
 *      Author: nsoblath
 */

#ifndef MT_VERSION_HH_
#define MT_VERSION_HH_

#include "mt_singleton.hh"

#include "mt_constants.hh"

#include <string>

#define Mantis_VERSION_MAJOR @Mantis_VERSION_MAJOR@
#define Mantis_VERSION_MINOR @Mantis_VERSION_MINOR@
#define Mantis_VERSION_PATCH @Mantis_VERSION_PATCH@
#define Mantis_VERSION @Mantis_VERSION@
#define Mantis_PACKAGE_NAME @Mantis_PACKAGE_NAME@

#define Mantis_GIT_COMMIT @Mantis_GIT_COMMIT@
#define Mantis_GIT_DESCRIBE @Mantis_GIT_DESCRIBE@



namespace mantis
{
    class MANTIS_API version
    {
        public:
            version();
            version( const std::string& a_ver );
            ~version();
            
            unsigned major_version() const;
            unsigned minor_version() const;
            unsigned patch_version() const;
            
            const std::string& version_str() const;
            
            bool parse( const std::string& a_ver );
            
            bool combine( unsigned a_maj_ver, unsigned a_min_ver, unsigned a_patch_ver );
            
            const std::string& package() const;
            const std::string& commit() const;
            
            const std::string& exe_name() const;
            const std::string& hostname() const;
            const std::string& username() const;
            
            bool update_exe_host_user();
            
        private:
            static char s_delimeter;
        
            unsigned f_major_ver;
            unsigned f_minor_ver;
            unsigned f_patch_ver;
            std::string f_version;
            
            std::string f_package;
            std::string f_commit;
            
            std::string f_exe_name;
            std::string f_hostname;
            std::string f_username;
    };
    
    
    class MANTIS_API version_global : public singleton< version_global >, public version
    {
        protected:
            friend class singleton< version_global >;
            friend class destroyer< version_global >;
            version_global();
            ~version_global();
    
    };
    

    inline unsigned version::major_version() const
    {
        return f_major_ver;
    }
    inline unsigned version::minor_version() const
    {
        return f_minor_ver;
    }
    inline unsigned version::patch_version() const
    {
        return f_patch_ver;
    }

    inline const std::string& version::version_str() const
    {
        return f_version;
    }
    
    inline const std::string& version::package() const
    {
        return f_package;
    }
    
    inline const std::string& version::commit() const
    {
        return f_commit;
    }

    inline const std::string& version::exe_name() const
    {
        return f_exe_name;
    }
    inline const std::string& version::hostname() const
    {
        return f_hostname;
    }
    inline const std::string& version::username() const
    {
        return f_username;
    }

} // namespace mantis

#endif /* MT_VERSION_HH_ */